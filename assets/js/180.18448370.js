(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{549:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"rspec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rspec"}},[e._v("#")]),e._v(" RSpec")]),e._v(" "),a("h2",{attrs:{id:"资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资料"}},[e._v("#")]),e._v(" 资料")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.codeschool.com/courses/testing-with-rspec",target:"_blank",rel:"noopener noreferrer"}},[e._v("Code School RSpec"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://robots.thoughtbot.com/how-we-test-rails-applications",target:"_blank",rel:"noopener noreferrer"}},[e._v("How We Test Rails Applications"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"http://www.rubydoc.info/github/jnicklas/capybara/master/capybara/node/finders",target:"_blank",rel:"noopener noreferrer"}},[e._v("rubydoc-capybar"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[e._v("#")]),e._v(" 测试")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 添加 RSpec\ngroup :development, :test do\n  gem 'sqlite3', '1.3.7'\n  gem 'rspec-rails', '2.13.1'\nend\n\n# 用于界面交互测试\ngroup :test do\n  gem 'selenium-webdriver', '2.0.0'\n  gem 'capybara', '2.1.0'\nend\n")])])]),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),a("p",[e._v("BDD：行为驱动开发。\nTDD：测试优先。\n失败--实现--通过；遇红，变绿，重构；\nDSL：Domain-specific Language，领域专属语言。")]),e._v(" "),a("h2",{attrs:{id:"运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[e._v("#")]),e._v(" 运行")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# bundle exec 保证 RSpec 运行在 Gemfil 指定的环境\nbundle exec rspec spec/requests/static_pages_spec.rb\n")])])]),a("ul",[a("li",[e._v("自动化测试")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# guard-rspec\n\n# Spork 加速测试\n\n")])])]),a("h2",{attrs:{id:"重构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重构"}},[e._v("#")]),e._v(" 重构")]),e._v(" "),a("p",[e._v("代码经常会『变味』丑陋、啰嗦、重复。经常重构很重要，一个好的测试就显出其价值了，可降低引入BUG风险。")]),e._v(" "),a("h2",{attrs:{id:"测试用例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试用例"}},[e._v("#")]),e._v(" 测试用例")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("require 'spec_helper'\n\ndescribe \"Static pages\" do\n  # 测试主页是否包含某内容\n  describe \"Home page\" do\n    it \"should have the content 'Sample App'\" do\n      visit '/static_pages/home'\n      expect(page).to have_content('Sample App')\n    end\n  end\n\n  # 测试 Titile\n    it \"should have the title 'About Us'\" do\n          visit '/static_pages/about'\n          expect(page).to have_title(\"Ruby on Rails Tutorial Sample App | About Us\")\n    end\nend\n")])])]),a("h2",{attrs:{id:"测试代码重构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试代码重构"}},[e._v("#")]),e._v(" 测试代码重构")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('describe "Home page" do\nbefore { visit root_path }  # 使用before 代替重复的代码\nit "should have the content \'Sample App\'" do\nexpect(page).to have_content(\'Sample App\')\nend\nit "should have the base title" do\nexpect(page).to have_title("Ruby on Rails Tutorial Sample App")\nend\nit "should not have a custom page title" do\nexpect(page).not_to have_title(\'| Home\')\nend\nend\n')])])]),a("p",[e._v("let 方法，只要指定就会创建一个局部变量，visit/click_link 函数（177页）")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://danielzhangqinglong.github.io/2015/03/03/rspec-capybara/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RSpec, Capybara, FactoryGirl的使用方法介绍"),a("OutboundLink")],1)])]),e._v(" "),a("h2",{attrs:{id:"运行单例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行单例"}},[e._v("#")]),e._v(" 运行单例")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 可从报错信息中获得这句话\nrspec spec/controllers/webapp/resumes_controller_spec.rb\n")])])]),a("h2",{attrs:{id:"针对某块内容的测试-可以预先生成公用数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#针对某块内容的测试-可以预先生成公用数据"}},[e._v("#")]),e._v(" 针对某块内容的测试，可以预先生成公用数据")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" describe 'test get_maturity' do\n      before :each do\n        @user = create(:user)\n        @resume = create(:resume, user_id: @user.id)\n        @education_experience = create(:education_experience, user_id: @user.id)\n        @expect_job = create(:expect_job, user_id: @user.id)\n      end\n\n      it \"test maturity = 100\" do\n        res = Resume.get_maturity @user.id\n        expect(res).to eq(100)\n      end\n    end\n")])])]),a("h2",{attrs:{id:"针对-model-的测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#针对-model-的测试"}},[e._v("#")]),e._v(" 针对 Model 的测试")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 期待 create 结果不被限制\nexpect(resume).not_to be_valid\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);