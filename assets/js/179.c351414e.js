(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{548:function(e,t,s){"use strict";s.r(t);var a=s(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"在此处输入标题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在此处输入标题"}},[e._v("#")]),e._v(" 在此处输入标题")]),e._v(" "),s("p",[e._v("标签（空格分隔）： 未分类")]),e._v(" "),s("hr"),e._v(" "),s("h1",{attrs:{id:"bdd-测试驱动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bdd-测试驱动"}},[e._v("#")]),e._v(" BDD 测试驱动")]),e._v(" "),s("h2",{attrs:{id:"_1-数据构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据构建"}},[e._v("#")]),e._v(" 1. 数据构建")]),e._v(" "),s("blockquote",[s("p",[e._v("gem 'factory_girl'\ngem 'factory_girl_rails'")])]),e._v(" "),s("ul",[s("li",[s("p",[s("code",[e._v("spec/factories/apply_records.rb")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  FactoryGirl.define do\n    factory :apply_record, :class => \'ApplyRecord\' do\n      resume_id 1\n      job_id 2\n      user_id 2\n      end_at "2016-05-18 18:04:53"\n      resume_status "MyString"\n      recieve_at "2016-05-18 18:04:53"\n      view_at "2016-05-18 18:04:53"\n    end\n\n    factory :apply_record2, :class => \'ApplyRecord\' do\n      resume_id 1\n      job_id 3\n      user_id 2\n      end_at "2016-05-18 18:04:53"\n      resume_status "MyString"\n      recieve_at "2016-05-18 18:04:53"\n      view_at "2016-05-18 18:04:53"\n    end\n  end\n')])])])]),e._v(" "),s("li",[s("p",[s("code",[e._v("create")]),e._v(" 方法，创建模拟数据")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('  it "return if user has applied job" do\n    @user = create(:user)\n    @job = create(:job)\n    @apply_record = create(:apply_record, user_id: @user.id, job_id: @job.id)\n\n    res = ApplyRecord.is_applied(@user.id,  @job.id)\n    res2 = ApplyRecord.is_applied(@user.id,  nil)\n\n    expect(res).to eq(true)\n    expect(res2).to eq(false)\n  end\n')])])])])]),e._v(" "),s("h2",{attrs:{id:"_2-model-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-model-测试"}},[e._v("#")]),e._v(" 2. Model 测试")]),e._v(" "),s("ul",[s("li",[e._v("测试数据库合法性验证是否生效")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('it \'invalid with reduplication show_name \' do\n  user = create(:user, show_name: "张三")\n  user2 = build(:user, show_name: "张三")\n  expect(user2).to_not be_valid\nend\n')])])]),s("ul",[s("li",[s("p",[e._v("测试 Model 方法")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("model方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# 获得剩余发布时间\ndef self.time_left jid\n  job = Job.find jid\n\n  if job.end_at && job.end_at > Time.now\n    return ((job.end_at + 1.hour - Time.now)/1.day).to_i\n  else\n    return 0\n  end\nend\n")])])])]),e._v(" "),s("li",[s("p",[e._v("模拟数据")])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" job = create :job, :hospital_id => @hospital1.id, :operate_at => Time.now - 5.days\n")])])]),s("ul",[s("li",[e._v("spec 文件中"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('it "test time_left jid" do\n  job = create :job\n\n  res = Job.time_left job.id\n  expect(res).to eq(60)\nend\n')])])])])])])]),e._v(" "),s("h2",{attrs:{id:"_3-controller-测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-controller-测试"}},[e._v("#")]),e._v(" 3. Controller 测试")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("测试连通性")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('before :each do\n  @user = create(:user)\n  @user.add_role :gold\n  login_with @user\n  request.env[\'devise.mapping\'] = Devise.mappings[:user]\nend\n\ndescribe "GET page " do\n  before :each do\n    @hospital = create(:hospital)\n    @employer = create(:employer, hospital_id: @hospital.id, user_id: @user.id)\n    @job = create(:job, hospital_id: @hospital.id)\n  end\n\n  it "index returns http success" do\n    get :index\n    expect(response).to have_http_status(:success)\n  end\n\n  it "show returns http success" do\n    get :show, id: @job.id\n    expect(response).to have_http_status(:success)\n  end\nend\n')])])])]),e._v(" "),s("li",[s("p",[e._v("测试 Action")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("describe 'DELETE #destroy' do\n    it 'delete http success' do\n      expect do\n      expect{\n        delete :destroy, id: @user.id\n      }.to change(Resume,:count).by(-1)\n      end\n    end\n\n    it 'redirects to users#show' do\n      expect do\n      delete :destroy, id: @user\n      expect(response).to redirect_to new_user_session_path\n      end\n    end\nend\n")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);