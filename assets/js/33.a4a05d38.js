(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{398:function(t,a,s){"use strict";s.r(a);var r=s(42),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范"}},[t._v("#")]),t._v(" 规范")]),t._v(" "),s("p",[t._v("https://github.com/ryanmcdermott/clean-code-javascript")]),t._v(" "),s("h2",{attrs:{id:"编程风格-programming-style"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程风格-programming-style"}},[t._v("#")]),t._v(" 编程风格 programming style")]),t._v(" "),s("ol",[s("li",[t._v("规则1：表示区块起首的大括号，不要另起一行。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　　　key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("圆括号（parentheses）在Javascript中有两种作用，一种表示调用函数，另一种表示不同的值的组合（grouping）")])]),t._v(" "),s("blockquote",[s("p",[t._v("规则2：调用函数的时候，函数名与左括号之间没有空格。\n规则3：函数名与参数序列之间，没有空格。\n规则4：所有其他语法元素与左括号之间，都有一个空格。")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("本行第一个字符为以下五个字符时,Javascript将不对上一行句尾添加分号")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("( [ / + -\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("规则6：不要使用with语句。")]),t._v(" "),s("li",[t._v('规则7：不要使用"相等"（==）运算符，只使用"严格相等"（===）运算符。')]),t._v(" "),s("li",[t._v("规则8：不要将不同目的的语句，合并成一行。")]),t._v(" "),s("li",[t._v("规则9：所有变量声明都放在函数的头部。")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[t._v("规则10：所有函数都在使用之前定义。")]),t._v(" "),s("li",[t._v("规则11：避免使用全局变量；如果不得不使用，用大写字母表示变量名，比如UPPER_CASE。")]),t._v(" "),s("li",[t._v("规则13：建构函数的函数名，采用首字母大写（InitialCap）；其他函数名，一律首字母小写。")]),t._v(" "),s("li",[t._v("规则14：不要使用自增（++）和自减（--）运算符，用+=和-=代替。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);