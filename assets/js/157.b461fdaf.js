(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{527:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),a("h2",{attrs:{id:"react-能做的事"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-能做的事"}},[t._v("#")]),t._v(" React 能做的事")]),t._v(" "),a("p",[t._v("在虚拟DOM上创建元素，然后将它们渲染到真实DOM上。")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("createElement(type,[props],[children...]) - 在虚拟DOM上创建指定的React元素")])]),t._v(" "),a("li",[a("p",[t._v("参数type用来指定要创建的元素类型，可以是一个字符串或一个React组件类型。当使用 字符串时，这个参数应当是标准的HTML标签名称，比如：p、div、canvas等等。")])]),t._v(" "),a("li",[a("p",[t._v("参数props是可选的JSON对象，用来指定元素的附加属性，比如样式、CSS类等等。 我们在示例中简单的设置为null。")])]),t._v(" "),a("li",[a("p",[t._v("从第三个参数children开始的所有参数，都被认为是这个元素的子元素。考虑到 虚拟DOM好歹也是DOM，容易理解React需要通过这些子元素参数，让我们可以构造虚拟DOM树：")])]),t._v(" "),a("li",[a("p",[t._v("render(element,container,[callback]) - 将虚拟DOM上的对象渲染到真实DOM上")])]),t._v(" "),a("li",[a("p",[t._v("参数element是我们使用createElement()方法创建的React元素，注意，不是HTML元素！")])]),t._v(" "),a("li",[a("p",[t._v("参数container是真实DOM中的HTML元素，作为渲染的目标容器，它的内容将被render()方法 的执行改变。")])]),t._v(" "),a("li",[a("p",[t._v("callback参数是可选的函数，当渲染完成或更新后被执行，通常我们不用它。")])])]),t._v(" "),a("h2",{attrs:{id:"选择-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择-dom"}},[t._v("#")]),t._v(" 选择 Dom")]),t._v(" "),a("ul",[a("li",[t._v("element = document.querySelector(selectors);")]),t._v(" "),a("li",[t._v('例子：var el = document.querySelector(".myclass");')])]),t._v(" "),a("h2",{attrs:{id:"react组件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react组件"}},[t._v("#")]),t._v(" React组件")]),t._v(" "),a("p",[t._v("组件就是一个 实现预定义接口的JavaScript类\n在meta中，至少需要实现一个render()方法，而这个方法， 必须而且只能返回一个有效的React元素。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("你的React组件名称的首字母应当大写\ndiv元素的样式类是用 className而不是class声明的，这是因为class 是JavaScript的保留字\n")])])]),a("h2",{attrs:{id:"jsx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" JSX")]),t._v(" "),a("p",[t._v("JSX是对JavaScript语法的扩展，它让我们可以在JavaScript代码中以类似HTML 的方式创建React元素。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\x3c!--定义容器--\x3e\n\t<div id="content"></div>\n\n\t\x3c!--声明脚本类型为JSX--\x3e\n\t<script type="text/jsx">\n\n\t\t//定义React组件\n\t\tvar EzLedComp = React.createClass({\n\t\t\t//每个React组件都应该事先render()方法\n\t\t\trender : function(){\n\t\t\t\tvar e =\n\n\t\t\t\t\t//JSX--\x3e\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className="ez-led">Hello, React!</div>\n\t\t\t\t\t\t<div className="ez-led">2015-04-15</div>\n\t\t\t\t\t</div>;\n\t\t\t\t\t//<--JSX\n\n\t\t\t\treturn e;\n\t\t\t}\n\t\t});\n\t\t//渲染\n\t\tReact.render(\n\t\t\t<EzLedComp/> , //JSX\n\t\t\tdocument.querySelector("#content"));\n\n\t<\/script>\n')])])]),a("ul",[a("li",[t._v("获得事件参数需要，需要在事件后添加e:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("handleClck: function(e){\n\n}\n")])])]),a("ul",[a("li",[t._v("JSX 中插入变量")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("inputChangeHandler : function (event) {\n    this.setState({ [event.target.id]: event.target.value });\n}\n")])])]),a("ul",[a("li",[t._v("展开属性内容")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SubComp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);